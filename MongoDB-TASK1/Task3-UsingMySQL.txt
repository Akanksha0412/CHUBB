-- Schema Chubb1
-- -----------------------------------------------------
CREATE SCHEMA `Chubb1`
USE `Chubb` ;

-- -----------------------------------------------------
-- Table `Chubb`.`Movie`
-- -----------------------------------------------------
-----CREATE TABLE Movie` ( Movie_Id` INT NOT NULL, Movie_name` VARCHAR(45) NOT NULL, PRIMARY KEY (`Movie_Id`));
-- -----------------------------------------------------
-- Table `Chubb`.`Users`
-- -----------------------------------------------------
-----CREATE TABLE Users` ( `user_Id` INT NOT NULL, `user_name` VARCHAR(45) NOT NULL, PRIMARY KEY (`user_Id`));
-- -----------------------------------------------------
-- Table `Chubb`.`Media`
-- -----------------------------------------------------
-----CREATE TABLE `Media` ( `Video_Id` INT NOT NULL, video_name varchar(40), Movie_Id` INT NOT NULL, PRIMARY KEY (`Video_Id`, `Movie_Id`), FOREIGN KEY (Movie_Id`) REFERENCES ``Movie` (`Movie_Id`));
-- -----------------------------------------------------
-- Table `Chubb`.`Reviews`
-- -----------------------------------------------------
-----CREATE TABLE IF NOT EXISTS `Chubb`.`Reviews` (reviews_Id` INT NOT NULL, review` VARCHAR(60) NULL, Movie_Id` INT NOT NULL, `user_Id` INT NOT NULL, PRIMARY KEY (`reviews_Id`, Movie_Id`,            user_Id`), FOREIGN KEY (`Movie_Id`) REFERENCES `Movie` (`Movie_Id`) FOREIGN KEY (`user_Id`) REFERENCES ``Users` (`user_Id`)
-- -----------------------------------------------------
-- Table `Chubb`.`Artist`
-- -----------------------------------------------------
-----CREATE TABLE Artist` ( artist_Id` INT NOT NULL, artist_name` VARCHAR(45) NOT NULL, PRIMARY KEY (`artist_Id`));
-- -----------------------------------------------------
-- Table `Chubb`.`Skills`
-- -----------------------------------------------------
-----CREATE TABLE Skills` ( `skills_Id` INT NOT NULL, skill_name` VARCHAR(45) NOT NULL, `artist_Id` INT NOT NULL, PRIMARY KEY (`skills_Id`, `artist_Id`), FOREIGN KEY (`artist_Id`)REFERENCES `Artist          (`artist_Id`);
-- -----------------------------------------------------
-- Table `Chubb`.`Genre`
-- -----------------------------------------------------
-----CREATE TABLE Genre` (`genre_Id` INT NOT NULL, genre_name` VARCHAR(45) NOT NULL, PRIMARY KEY (`genre_Id`));
-- -----------------------------------------------------
-- Table `Chubb`.`Roles`
-- -----------------------------------------------------
```-----CREATE TABLE `Roles` ( roles_Id` INT NOT NULL, `role_name` VARCHAR(30) NULL, artist_Id` INT NOT NULL, Movie_Id` INT NOT NULL, PRIMARY KEY (`roles_Id`, `artist_Id`, Movie_Id`), FOREIGN KEY           (`artist_Id`)REFERENCES `Artist` (`artist_Id`)FOREIGN KEY (`Movie_Id`)REFERENCES ``Movie` (`Movie_Id`);
-- -----------------------------------------------------
-- Table `Chubb`.`Genre_has_Movie`
-- -----------------------------------------------------
----CREATE TABLE Chubb`.`Genre_has_Movie` ( Genre_genre_Id` INT NOT NULL, Movie_Movie_Id` INT NOT NULL, PRIMARY KEY (`Genre_genre_Id`, `Movie_Movie_Id`), FOREIGN KEY (`Genre_genre_Id`) REFERENCES `Chubb`.`Genre` (`genre_Id`) FOREIGN KEY (`Movie_Movie_Id`) REFERENCES `Chubb`.`Movie` (`Movie_Id`);



--------------Query--------------------

1.)   SELECT media.video_name FROM media INNER JOIN movie ON media.movie_Id=movie.movie_Id where movie.movie_Id="particular_Id";
-----------------------------------------
2.)   SELECT m.video_name, r.review FROM ( movie as mo INNER JOIN media as m ON mo.movie_Id=m.movie_Id) INNER JOIN reviews as r ON mo.movie_Id=r.movie_Id;
-----------------------------------------
3.)   SELECT a.artist_name FROM ( movie as mo INNER JOIN roles as r ON mo.movie_Id=r.movie_Id) INNER JOIN artist as a ON r.artist_Id=a.artist_Id;
-----------------------------------------
4.)   SELECT r.review FROM users as u INNER JOIN reviews as r ON u.user_Id=r.user_Id where u.user_Id="ParticularId";
-----------------------------------------
5.)   SELECT skills.skill_name FROM artist as a INNER JOIN skills as s ON a.artist_Id=s.artist_Id where a.artist_Id="ParticularId";
-----------------------------------------
6.)   SELECT r.role_name FROM artist as a INNER JOIN roles as r ON a.artist_Id=r.artist_Id where a.artist_Id="ParticularId";
